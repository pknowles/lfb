
#Makefile generated by genmake.py (http://goanna.cs.rmit.edu.au/~pknowles/scripts.php)
#Known Bugs: Not all source files/headers of sublibs (projects with their own
#makefile in subdirectories) are searched. Hence, the external library prediction
#does not always get all results

#check x64
ASFX=
LBITS := $(shell getconf LONG_BIT)
ifeq ($(LBITS),64)
ASFX=64
endif

NOOP = @$(SHELL) -c true


.PHONY: all debug prof opt clean cleaner
TARGET=liblfb$(ASFX).a
CC=g++
LD=ar
CFLAGS_R?=
CFLAGS= -fPIC $(CFLAGS_R) -Wno-unused-parameter -Wno-unused-but-set-variable  `pkg-config freetype2 --cflags` -std=c++0x -Wall -Wextra -D_GNU_SOURCE -Wfatal-errors
CFLAGS+= -I../pyarlib/../
LFLAGS= -rcs 
SUBLIBS= ../pyarlib/pyarlib$(ASFX).a
OBJECTS= ./lfb.o ./prefixSums.o ./lfbBase.o ./lfbL.o ./lfbLL.o ./lfbB.o ./lfbPLL.o

all: pyarlibpyarliba $(TARGET)

debug: CFLAGS+= -g
debug: export CFLAGS_R+= -g
debug: all

prof: CFLAGS+= -pg
prof: export CFLAGS_R+= -pg
prof: all

opt: CFLAGS+= -03
opt: export CFLAGS_R+= -03
opt: all

ALL_SUBLIBS= $(SUBLIBS)
SUBSUBLIBS_PYARLIBPYARLIBA= $(shell make echodeps --no-print-directory -C ../pyarlib/ 2>/dev/null)
ALL_SUBLIBS+= $(SUBSUBLIBS_PYARLIBPYARLIBA:%.a=../pyarlib/%.a)


#prints a list of library dependencies recursively
echodeps:
	@echo $(ALL_SUBLIBS)


#linking/archiving the target
$(TARGET): $(SUBLIBS) $(OBJECTS)
	@echo linking $(TARGET)
	@$(LD) -o $(TARGET) $(OBJECTS) $(ALL_SUBLIBS) $(LFLAGS)

#target dependent libraries
../pyarlib/pyarlib$(ASFX).a:
	$(NOOP) #just so $(ASFX) doesnt cause makefile complaints
pyarlibpyarliba:
	@$(MAKE) --no-print-directory -C ../pyarlib -q || ( echo +../pyarlib && $(MAKE) --no-print-directory -C ../pyarlib && echo -../pyarlib )

#compile object files
%.o : %.cpp
	@echo compiling $@ $(CFLAGS_R)
	@export CCACHE_DISABLE=1 && $(CC) $(CFLAGS) -c $< -o $@

#object dependencies
./lfb.o: lfb.cpp lfbLL.h lfbB.h lfbL.h lfbPLL.h lfbBase.h lfb.h
./prefixSums.o: prefixSums.cpp prefixSums.h
./lfbBase.o: lfbBase.cpp shaders/lfb.glsl shaders/lfbZero.vert shaders/lfbTiles.glsl shaders/lfbSort.vert shaders/sorting.glsl lfbBase.h
./lfbL.o: lfbL.cpp shaders/lfbRaggedSort.vert lfbBase.h prefixSums.h shaders/lfbCopy.vert lfbL.h shaders/prefixSums.vert shaders/lfbL.glsl
./lfbLL.o: lfbLL.cpp lfbLL.h extraglenums.h lfbBase.h shaders/lfbLL.glsl
./lfbB.o: lfbB.cpp lfbB.h lfbBase.h shaders/lfbB.glsl
./lfbPLL.o: lfbPLL.cpp lfbLL.h shaders/lfbPLL.glsl extraglenums.h lfbBase.h lfbPLL.h

#clean and cleaner
clean:
	@echo cleaning $(TARGET)
	@rm -f $(OBJECTS)
	@rm -f $(TARGET)
cleaner: clean
	@echo +../pyarlib
	@$(MAKE) clean --no-print-directory -C ../pyarlib
	@echo -../pyarlib










